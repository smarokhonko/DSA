class Solution {
public:

    //O(n) - time
    //O(n) - space
    vector<int> twoSum(vector<int>& nums, int target) {
        
        if(nums.empty())
        	return {-1, -1};

        std::unordered_map<int, int> storage;

        for(int i = 0; i < nums.size(); ++i)
        {
            int value = target - nums[i];

            auto it = storage.find(value);

            if(it != storage.end())
                return {it->second, i};

             storage[nums[i]] = i;
        }

        return {-1, -1};
    }
};
